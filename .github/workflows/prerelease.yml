name: Pre-Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The release tag'
        required: true
        type: choice
        options:
          - alpha
          - beta
          - rc

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      packages: write
      pull-requests: write
      issues: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Set changesets to prerelease mode
        run: pnpm changeset pre enter ${{ inputs.tag }}

      - name: Set versions in package.json
        run: pnpm changeset version

      - name: Modify "workspaces" value in package.json
        run: sed -e "s;libs/ts-rest/\*;dist/libs/ts-rest/react-query;g" package.json > package-new.json && mv package-new.json package.json

      - name: Get Release Version
        id: release-version
        uses: martinbeentjes/npm-get-version-action@3cf273023a0dda27efcd3164bdfb51908dd46a5b
        with:
          path: libs/ts-rest/react-query

      - if: ${{ contains(steps.release-version.outputs.current-version, '-') }}
        name: Create Release Pull Request or Publish to npm
        uses: dotansimha/changesets-action@069996e9be15531bd598272996fa23853d61590e
        with:
          title: Release Tracking
          publish: pnpm release
          version: ':'
          createGithubReleases: aggregate
          githubReleaseName: v${{ steps.release-version.outputs.current-version }}
          githubTagName: v${{ steps.release-version.outputs.current-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
